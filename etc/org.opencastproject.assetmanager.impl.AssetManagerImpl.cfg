# Define if API roles should be included in asset manager access control checks.
# API roles are defined as all roles starting with `ROLE_API_`.
#
# Setting this to false will make Opencast's asset manager behave like users do not have these roles at all, leading to
# far simpler and better performing SQL queries with the obvious downside that no access can be granted based on these
# roles.
#
# Default: false
#
#includeAPIRoles = false

# Define if CA roles should be included in asset manager access control checks.
# CA roles are defined as all roles starting with `ROLE_CAPTURE_AGENT_`.
#
# Setting this to false will make Opencast's asset manager behave like users do not have these roles at all, leading to
# far simpler and better performing SQL queries with the obvious downside that no access can be granted based on these
# roles.
#
# Default: false
#
#includeCARoles = false

# Define if UI roles should be included in asset manager access control checks.
# UI roles are defined as all roles starting with `ROLE_UI_`.
#
# Setting this to false will make Opencast's asset manager behave like users do not have these roles at all, leading to
# far simpler and better performing SQL queries with the obvious downside that no access can be granted based on these
# roles.
#
# Default: false
#
#includeUIRoles = false

# Allow episode ID based access control via roles.
# If activated, users with a role like ROLE_EPISODE_<ID>_<ACTION> will have access to the episode with the given
# identifier, without this having to be specifically specified in the ACL attached to the episode.
#
# For example, ROLE_EPISODE_872dc4ec-ca8a-4e12-8dac-ce99784d6d29_READ will allow the user to get read access to episode
# 872dc4ec-ca8a-4e12-8dac-ce99784d6d29.
#
# Default: false
#episode.id.role.access = false
